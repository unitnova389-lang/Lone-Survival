-- Admin Aimbot with Fast Smooth Camera, Perfectly Centered FOV Circle + Outline + Alive Check
-- LocalScript in StarterPlayerScripts

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera

local localPlayer = Players.LocalPlayer
local aimEnabled = false
local aimTarget = nil
local fovRadius = 150 -- pixels
local smoothness = 0.9 -- very fast aiming

local playerGui = localPlayer:WaitForChild("PlayerGui")

-- === UI Setup ===
local gui = Instance.new("ScreenGui")
gui.Name = "AimbotGUI"
gui.ResetOnSpawn = false
gui.Parent = playerGui

-- Outer circle (outline)
local outerCircle = Instance.new("Frame")
outerCircle.Size = UDim2.fromOffset(fovRadius*2, fovRadius*2)
outerCircle.AnchorPoint = Vector2.new(0.5, 0.5)
outerCircle.Position = UDim2.new(0.5, 0, 0.5, -10)
outerCircle.BackgroundTransparency = 1
outerCircle.BorderSizePixel = 0
outerCircle.Parent = gui

local outerUICorner = Instance.new("UICorner")
outerUICorner.CornerRadius = UDim.new(1,0)
outerUICorner.Parent = outerCircle

local outerStroke = Instance.new("UIStroke")
outerStroke.Thickness = 1
outerStroke.Color = Color3.fromRGB(255,0,0)
outerStroke.Parent = outerCircle

-- Inner circle (semi-transparent fill)
local innerCircle = Instance.new("Frame")
innerCircle.Size = UDim2.fromOffset(fovRadius*2 - 6, fovRadius*2 - 6)
innerCircle.AnchorPoint = Vector2.new(0.5, 0.5)
innerCircle.Position = UDim2.new(0.5, 0, 0.5, -10)
innerCircle.BackgroundTransparency = 0.7
innerCircle.BackgroundColor3 = Color3.fromRGB(0,0,0)
innerCircle.BorderSizePixel = 0
innerCircle.Parent = gui

local innerUICorner = Instance.new("UICorner")
innerUICorner.CornerRadius = UDim.new(1,0)
innerUICorner.Parent = innerCircle

-- HSV to RGB helper
local function hsvToRgb(h, s, v)
	local i = math.floor(h * 6)
	local f = h * 6 - i
	local p = v * (1 - s)
	local q = v * (1 - f * s)
	local t = v * (1 - (1 - f) * s)
	local r, g, b
	if i % 6 == 0 then r, g, b = v, t, p
	elseif i == 1 then r, g, b = q, v, p
	elseif i == 2 then r, g, b = p, v, t
	elseif i == 3 then r, g, b = p, q, v
	elseif i == 4 then r, g, b = t, p, v
	elseif i == 5 then r, g, b = v, p, q end
	return Color3.new(r, g, b)
end

-- Toggle aimbot with X
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.X then
		aimEnabled = not aimEnabled
		aimTarget = nil
		print("Aimbot " .. (aimEnabled and "ON" or "OFF"))
	end
end)

-- Find closest head in workspace.Players that belongs to a real player and is alive
local function getClosestHead(center)
	local folder = workspace:FindFirstChild("Players")
	if not folder then return nil end

	local closest = nil
	local dist = math.huge

	for _, model in pairs(folder:GetChildren()) do
		if model:IsA("Model") and model.Name ~= localPlayer.Name and Players:FindFirstChild(model.Name) then
			local head = model:FindFirstChild("Head")
			local humanoid = model:FindFirstChildOfClass("Humanoid")
			if head and head:IsA("BasePart") and humanoid and humanoid.Health > 0 then
				local pos, visible = camera:WorldToViewportPoint(head.Position)
				if visible then
					local screenPos = Vector2.new(pos.X, pos.Y)
					local mag = (screenPos - center).Magnitude
					if mag <= fovRadius and mag < dist then
						closest = head
						dist = mag
					end
				end
			end
		end
	end

	return closest
end

-- Remove aimTarget if player leaves
Players.PlayerRemoving:Connect(function(plr)
	if aimTarget and aimTarget.Parent.Name == plr.Name then
		aimTarget = nil
	end
end)

-- Update loop
local hue = 0
RunService.RenderStepped:Connect(function(dt)
	local screenCenter = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)

	-- Animate RGB outline
	hue = (hue + dt * 0.5) % 1
	outerStroke.Color = hsvToRgb(hue,1,1)

	-- Smooth aimbot logic
	if aimEnabled then
		if not aimTarget or not aimTarget.Parent or aimTarget.Parent.Name == localPlayer.Name then
			aimTarget = getClosestHead(screenCenter)
		end

		-- Only aim if target is alive
		if aimTarget and aimTarget.Parent and Players:FindFirstChild(aimTarget.Parent.Name) then
			local humanoid = aimTarget.Parent:FindFirstChildOfClass("Humanoid")
			if humanoid and humanoid.Health > 0 then
				local goalCFrame = CFrame.new(camera.CFrame.Position, aimTarget.Position)
				camera.CFrame = camera.CFrame:Lerp(goalCFrame, smoothness)
			else
				aimTarget = nil -- stop aiming if dead
			end
		end
	end
end)
