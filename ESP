-- Admin ESP LocalScript
-- Highlight + username + distance text under player
-- Fully cleans up when player leaves

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local localPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera
local playersFolder = Workspace:WaitForChild("Players")

-- Rainbow function
local function getRainbowColor()
    return Color3.fromHSV(tick()%5/5,1,1)
end

-- Table to store drawings for each model
local drawings = {}

-- Remove drawings for a model
local function removeDrawings(model)
    if not drawings[model] then return end
    for _, obj in pairs(drawings[model]) do
        pcall(function() obj:Remove() end)
    end
    drawings[model] = nil
end

-- Create drawings for a model
local function createDrawings(model)
    if drawings[model] then return end

    local nameText = Drawing.new("Text")
    nameText.Size = 16
    nameText.Center = true
    nameText.Outline = true
    nameText.Color = Color3.fromRGB(255,255,255)
    nameText.Visible = true

    local distText = Drawing.new("Text")
    distText.Size = 16
    distText.Center = true
    distText.Outline = true
    distText.Color = Color3.fromRGB(255,255,0)
    distText.Visible = true

    drawings[model] = {
        name = nameText,
        distance = distText
    }
end

-- Apply ESP to a model
local function applyESP(model)
    if not model or model == localPlayer.Character then return end
    local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Torso")
    local humanoid = model:FindFirstChildWhichIsA("Humanoid")
    if not root or not humanoid then return end

    -- Create drawings if not exist
    createDrawings(model)

    -- Remove drawings when humanoid dies
    humanoid.Died:Connect(function()
        removeDrawings(model)
    end)

    -- Remove drawings if model is removed from workspace
    model.AncestryChanged:Connect(function(_, parent)
        if not parent then
            removeDrawings(model)
        end
    end)
end

-- Apply ESP to existing models
for _, model in pairs(playersFolder:GetChildren()) do
    applyESP(model)
end

-- Apply ESP to new models
playersFolder.ChildAdded:Connect(function(model)
    task.wait(0.1)
    applyESP(model)
end)

-- Remove drawings when a player leaves
playersFolder.ChildRemoved:Connect(function(model)
    removeDrawings(model)
end)

-- Update drawings every frame
RunService.RenderStepped:Connect(function()
    for model, objs in pairs(drawings) do
        if model.Parent then
            local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Torso")
            if root then
                local pos, onScreen = camera:WorldToViewportPoint(root.Position + Vector3.new(0,3,0))
                if onScreen then
                    -- Name below player
                    objs.name.Position = Vector2.new(pos.X, pos.Y + 20)
                    objs.name.Text = model.Name

                    -- Distance under player
                    local dist = (root.Position - camera.CFrame.Position).Magnitude
                    objs.distance.Position = Vector2.new(pos.X, pos.Y + 35)
                    objs.distance.Text = string.format("[%.0f] studs", dist)

                    -- Rainbow outline effect for distance
                    objs.name.Color = Color3.fromRGB(255,255,255)
                    objs.distance.Color = getRainbowColor()

                    objs.name.Visible = true
                    objs.distance.Visible = true
                else
                    objs.name.Visible = false
                    objs.distance.Visible = false
                end
            end
        else
            -- Remove drawings if root missing
            removeDrawings(model)
        end
    end
end)
