-- Admin ESP LocalScript
-- Highlight + healthbar + username + distance

local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local localPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera
local playersFolder = Workspace:WaitForChild("Players")

-- Rainbow color function
local function getRainbowColor()
    return Color3.fromHSV(tick() % 5 / 5, 1, 1)
end

-- Store drawings per model
local drawings = {}

-- Remove drawings for model
local function removeDrawings(model)
    if not drawings[model] then return end
    for _, obj in pairs(drawings[model]) do
        pcall(function() obj:Remove() end)
    end
    drawings[model] = nil
end

-- Apply Highlight + Drawing text + healthbar
local function applyESP(model)
    if not model or model == localPlayer.Character then return end
    local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Torso")
    local humanoid = model:FindFirstChildWhichIsA("Humanoid")
    if not root or not humanoid then return end

    -- Highlight
    if not model:FindFirstChild("Admin_Highlight") then
        local hl = Instance.new("Highlight")
        hl.Name = "Admin_Highlight"
        hl.FillColor = Color3.fromRGB(0,0,0)
        hl.FillTransparency = 0.4
        hl.OutlineColor = getRainbowColor()
        hl.OutlineTransparency = 0
        hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        hl.Parent = model
    end

    -- Create drawings if not exist
    if not drawings[model] then
        local healthBar = Drawing.new("Text")
        healthBar.Size = 16
        healthBar.Center = true
        healthBar.Outline = true
        healthBar.Color = Color3.fromRGB(0,255,0)
        healthBar.Visible = true

        local nameText = Drawing.new("Text")
        nameText.Size = 16
        nameText.Center = true
        nameText.Outline = true
        nameText.Color = Color3.fromRGB(255,255,255)
        nameText.Visible = true

        local distText = Drawing.new("Text")
        distText.Size = 16
        distText.Center = true
        distText.Outline = true
        distText.Color = Color3.fromRGB(255,255,0)
        distText.Visible = true

        drawings[model] = {
            health = healthBar,
            name = nameText,
            distance = distText
        }
    end

    -- Cleanup on death
    humanoid.Died:Connect(function()
        removeDrawings(model)
        local hl = model:FindFirstChild("Admin_Highlight")
        if hl then hl:Destroy() end
    end)

    -- Cleanup on removal
    model.AncestryChanged:Connect(function(_, parent)
        if not parent then
            removeDrawings(model)
            local hl = model:FindFirstChild("Admin_Highlight")
            if hl then hl:Destroy() end
        end
    end)
end

-- Apply ESP to existing models
for _, model in pairs(playersFolder:GetChildren()) do
    applyESP(model)
end

-- Apply ESP to new models
playersFolder.ChildAdded:Connect(function(model)
    task.wait(0.1)
    applyESP(model)
end)

-- Remove drawings when model removed from folder
playersFolder.ChildRemoved:Connect(function(model)
    removeDrawings(model)
end)

-- Update every frame
RunService.RenderStepped:Connect(function()
    for model, objs in pairs(drawings) do
        if model.Parent then
            local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Torso")
            local humanoid = model:FindFirstChildWhichIsA("Humanoid")
            if root and humanoid and humanoid.Health > 0 then
                local screenPos, onScreen = camera:WorldToViewportPoint(root.Position)
                if onScreen then
                    -- Health above player
                    objs.health.Position = Vector2.new(screenPos.X, screenPos.Y - 20)
                    objs.health.Text = string.format("HP: %.0f/%.0f", humanoid.Health, humanoid.MaxHealth)
                    objs.health.Color = getRainbowColor()
                    objs.health.Visible = true

                    -- Username below player
                    objs.name.Position = Vector2.new(screenPos.X, screenPos.Y + 20)
                    objs.name.Text = model.Name
                    objs.name.Color = Color3.fromRGB(255,255,255)
                    objs.name.Visible = true

                    -- Distance under username
                    local dist = (root.Position - camera.CFrame.Position).Magnitude
                    objs.distance.Position = Vector2.new(screenPos.X, screenPos.Y + 35)
                    objs.distance.Text = string.format("[%.0f] studs", dist)
                    objs.distance.Color = getRainbowColor()
                    objs.distance.Visible = true

                    -- Rainbow highlight outline
                    local hl = model:FindFirstChild("Admin_Highlight")
                    if hl then hl.OutlineColor = getRainbowColor() end
                else
                    objs.health.Visible = false
                    objs.name.Visible = false
                    objs.distance.Visible = false
                end
            else
                objs.health.Visible = false
                objs.name.Visible = false
                objs.distance.Visible = false
            end
        else
            removeDrawings(model)
            local hl = model:FindFirstChild("Admin_Highlight")
            if hl then hl:Destroy() end
        end
    end
end)
