local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local menuVisible = true
local dragging, dragStart, startPos

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BlackLonerMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Position = UDim2.new(0.14, 0, 0.186, 0)
mainFrame.Size = UDim2.new(0.247, 0, 0.522, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BackgroundTransparency = 0.05
mainFrame.Active = true
mainFrame.Parent = screenGui

-- Top Bar
local topBar = Instance.new("TextLabel")
topBar.Size = UDim2.new(1, 0, 0, 40)
topBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
topBar.TextColor3 = Color3.fromRGB(255, 255, 255)
topBar.TextScaled = true
topBar.Text = "Black Loner"
topBar.Parent = mainFrame

-- Scroll Frame
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, -40)
scrollFrame.Position = UDim2.new(0, 0, 0, 40)
scrollFrame.BackgroundTransparency = 1
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 6
scrollFrame.Parent = mainFrame

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 5)
layout.FillDirection = Enum.FillDirection.Vertical
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Parent = scrollFrame

layout.Changed:Connect(function()
	scrollFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
end)

-- Helper function to create a button
local function createRemoteButton(name, url)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, -10, 0, 40)
	button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	button.TextColor3 = Color3.fromRGB(0, 255, 0)
	button.TextScaled = true
	button.Text = name
	button.Parent = scrollFrame

	local clicked = false
	local downConn, clickConn

	downConn = button.MouseButton1Down:Connect(function()
		if clicked then return end
		button.AutoButtonColor = false
		button.BackgroundColor3 = Color3.fromRGB(150,150,150)
		button.TextColor3 = Color3.fromRGB(255,255,255)
	end)

	clickConn = button.MouseButton1Click:Connect(function()
		if clicked then return end
		clicked = true

		if downConn then downConn:Disconnect() downConn = nil end
		if clickConn then clickConn:Disconnect() clickConn = nil end

		button.AutoButtonColor = false
		button.Active = false
		button.Selectable = false

		task.spawn(function()
			local ok, err = pcall(function()
				local fn = loadstring(game:HttpGet(url))
				if type(fn) == "function" then fn() end
			end)
			if not ok then warn("Failed to run script:", url, err) end
		end)
	end)
end

-- Run Start script automatically
task.spawn(function()
	local ok, err = pcall(function()
		local fn = loadstring(game:HttpGet("https://raw.githubusercontent.com/unitnova389-lang/Lone-Survival/refs/heads/main/Start"))
		if type(fn) == "function" then fn() end
	end)
	if not ok then warn("Failed to run Start script:", err) end
end)

-- Create buttons
createRemoteButton("ESP", "https://raw.githubusercontent.com/unitnova389-lang/Lone-Survival/refs/heads/main/ESP")
createRemoteButton("NightVision", "https://raw.githubusercontent.com/unitnova389-lang/Lone-Survival/refs/heads/main/NightVision")
createRemoteButton("Zoom", "https://raw.githubusercontent.com/unitnova389-lang/Lone-Survival/refs/heads/main/Zoom")

-- Toggle menu with F5
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.F5 then
		menuVisible = not menuVisible
		mainFrame.Visible = menuVisible
	end
end)

-- Dragging system
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
	end
end)

topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)
